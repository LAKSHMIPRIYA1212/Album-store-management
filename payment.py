#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.25.1
#  in conjunction with Tcl version 8.6
#    May 27, 2020 07:16:33 PM IST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import payment_support
from tkinter import messagebox as mb 
import os.path
from tkinter import Canvas
from tkinter import StringVar

def back(self):
    root.destroy()
    import customer1
    customer1.vp_start_gui()   

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = Toplevel1 (root)
    payment_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    payment_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font11 = "-family {Century Schoolbook L} -size 15 -weight bold"  \
            " -slant roman -underline 0 -overstrike 0"

        top.geometry("408x440+501+178")
        top.title("Payment")
        top.configure(background="#f9f9f9")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.343, rely=0.045, height=101, width=109)
        photo_location = os.path.join(prog_location,"./Documents/mini_project/payment.png")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img0)
        self.Label1.configure(text='''Label''')

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.074, rely=0.295, relheight=0.648, relwidth=0.87)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="6")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#b3b5d8")

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(relx=0.113, rely=0.281, height=21, width=99)
        self.Label2.configure(background="#b3b5d8")
        self.Label2.configure(text='''Name on card:''')

        self.Entry1 = tk.Entry(self.Frame1)
        self.Entry1.place(relx=0.451, rely=0.281,height=23, relwidth=0.468)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")

        self.Label3 = tk.Label(self.Frame1)
        self.Label3.place(relx=0.113, rely=0.386, height=21, width=94)
        self.Label3.configure(background="#b3b5d8")
        self.Label3.configure(text='''Card Number:''')

        self.Entry2 = tk.Entry(self.Frame1)
        self.Entry2.place(relx=0.451, rely=0.386,height=23, relwidth=0.468)
        self.Entry2.configure(background="white")
        self.Entry2.configure(font="TkFixedFont")

        self.Label4 = tk.Label(self.Frame1)
        self.Label4.place(relx=0.113, rely=0.491, height=21, width=92)
        self.Label4.configure(background="#b3b5d8")
        self.Label4.configure(text='''Expairy Date:''')

        self.Entry3 = tk.Entry(self.Frame1)
        self.Entry3.place(relx=0.451, rely=0.491,height=23, relwidth=0.468)
        self.Entry3.configure(background="white")
        self.Entry3.configure(font="TkFixedFont")

        self.Label5 = tk.Label(self.Frame1)
        self.Label5.place(relx=0.197, rely=0.596, height=21, width=35)
        self.Label5.configure(background="#b3b5d8")
        self.Label5.configure(text='''CVV:''')
        
        self.Entry4 = tk.Entry(self.Frame1)
        self.Entry4.place(relx=0.451, rely=0.596,height=23, relwidth=0.468)
        self.Entry4.configure(background="white")
        self.Entry4.configure(font="TkFixedFont")
       
        self.Label7 = tk.Label(self.Frame1)
        self.Label7.place(relx=0.125, rely=0.700, height=21, width=95)
        self.Label7.configure(background="#b3b5d8")
        self.Label7.configure(text='''Total Amount:''')

        self.Entry5 = tk.Entry(self.Frame1)
        self.Entry5.place(relx=0.451, rely=0.700,height=23, relwidth=0.468)
        self.Entry5.configure(background="white")
        self.Entry5.configure(font="TkFixedFont")

        self.Label6 = tk.Label(self.Frame1)
        self.Label6.place(relx=0.028, rely=0.035, height=41, width=330)
        self.Label6.configure(background="#3a477c")
        self.Label6.configure(font=font11)
        self.Label6.configure(foreground="#ffffff")
        self.Label6.configure(text='''Payment Details''')

        self.Buttonb = tk.Button(top)
        self.Buttonb.place(relx=0.083, rely=0.044, height=29, width=71)
        self.Buttonb.configure(background="#d8cbd3")
        self.Buttonb.configure(borderwidth="3")
        self.Buttonb.configure(text='''< Back''')
        self.Buttonb.configure(command=lambda:back(self))

        self.Button1 = tk.Button(self.Frame1)
        self.Button1.place(relx=0.31, rely=0.837, height=35, width=132)
        self.Button1.configure(background="#71c441")
        self.Button1.configure(borderwidth="3")
        self.Button1.configure(text='''Proceed To Pay''')
        def pay(self):
            if (self.Entry1.get()=="" and self.Entry2.get()=="" and self.Entry3.get()==""
            and self.Entry4.get()==""and self.Entry5.get()=="") or (self.Entry1.get()=="" or self.Entry2.get()=="" or self.Entry3.get()==""
            or self.Entry4.get()=="" or self.Entry5.get()==""):

                mb.showinfo(title="Warning!!",message="Some fields are empty")
                
            else:
                mb.showinfo(title="Payment",message="Payment Successful!!")
                print("Payment Successfully Completed"+"\n"+"Name on Card: "+str(self.Entry1.get())
                    +"\n"+"Paid from Card Number: "+str(self.Entry2.get()) +"\n"+"Total Amount Paid: "+str(self.Entry5.get()))
                    
        self.Button1.configure(command=lambda:pay(self))    



if __name__ == '__main__':
    vp_start_gui()





