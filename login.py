#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.25.1
#  in conjunction with Tcl version 8.6
#    May 23, 2020 10:16:09 PM IST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import login_support
import os.path
from tkinter import messagebox as mb
def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    login_support.set_Tk_var()
    top = Toplevel1 (root)
    login_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    rt = root
    w = tk.Toplevel (root)
    login_support.set_Tk_var()
    top = Toplevel1 (w)
    login_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


def next(self):
    userid="admin"
    password="admin"
    userid1="user"
    password1="user"

 
    if self.var.get()==1:
        if self.TEntry1.get()==userid and self.TEntry2.get()==password:
            import miniproject
            root.destroy()
            miniproject.vp_start_gui()
        elif self.TEntry1.get()==userid1 and self.TEntry2.get()==password1:
            import customer1
            root.destroy()
            customer1.vp_start_gui()
        else:
            
            mb.showinfo(title="Login error :( " , message=" User name or password incorrect")
    else:        
        mb.showinfo(title="Login error :( " , message=" not a human??")

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font13 = "-family {Century Schoolbook L} -size 17 -weight "  \
            "normal -slant roman -underline 0 -overstrike 0"
        font17 = "-family {Century Schoolbook L} -size 12 -weight "  \
            "normal -slant roman -underline 0 -overstrike 0"
        font19 = "-family {Century Schoolbook L} -size 15 -weight "  \
            "normal -slant roman -underline 1 -overstrike 0"
        font20 = "-family {Century Schoolbook L} -size 20 -weight bold"  \
            " -slant roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("504x383+409+173")
        top.title("Login Panel")
        top.configure(background="#898882")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.0, rely=-0.209, height=531, width=199)
        photo_location = os.path.join(prog_location,"./Documents/mini_project/logbook2.png")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img0)
        self.Label1.configure(text='''Label''')

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=-0.02, rely=0.0, height=41, width=519)
        self.Label4.configure(background="#898882")
        self.Label4.configure(font=font20)
        self.Label4.configure(text='''Wondering what to read next''')

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=-0.02, rely=0.104, height=41, width=519)
        self.Label5.configure(background="#898882")
        self.Label5.configure(font=font13)
        self.Label5.configure(text='''Just sign in to Book Club''')

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.456, rely=0.235, relheight=0.718
                , relwidth=0.506)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="4")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#c1c0b7")

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(relx=0.118, rely=0.073, height=31, width=199)
        self.Label2.configure(background="#c1c0b7")
        self.Label2.configure(font=font19)
        self.Label2.configure(text='''Login to Continue''')

        self.Label3 = tk.Label(self.Frame1)
        self.Label3.place(relx=0.078, rely=0.327, height=21, width=59)
        self.Label3.configure(background="#c1c0b7")
        self.Label3.configure(font=font17)
        self.Label3.configure(text='''User''')

        self.Label6 = tk.Label(self.Frame1)
        self.Label6.place(relx=0.078, rely=0.473, height=25, width=74)
        self.Label6.configure(background="#c1c0b7")
        self.Label6.configure(font=font17)
        self.Label6.configure(text='''Password''')

        self.TEntry1 = ttk.Entry(self.Frame1)
        self.TEntry1.place(relx=0.392, rely=0.327, relheight=0.076
                , relwidth=0.525)
        self.TEntry1.configure(takefocus="")
        self.TEntry1.configure(cursor="xterm")

        self.TEntry2 = ttk.Entry(self.Frame1)
        self.TEntry2.place(relx=0.392, rely=0.473, relheight=0.076
                , relwidth=0.525)
        self.TEntry2.configure(takefocus="")
        self.TEntry2.configure(cursor="xterm",show="*")

        self.style.map('TCheckbutton',background=
            [('selected', _bgcolor), ('active', _ana2color)])
        self.TCheckbutton1 = ttk.Checkbutton(self.Frame1)
        self.TCheckbutton1.place(relx=0.275, rely=0.618, relwidth=0.447
                , relheight=0.0, height=21)
        self.TCheckbutton1.configure(variable=login_support.tch67)
        self.TCheckbutton1.configure(takefocus="")
        self.TCheckbutton1.configure(text='''not a robort''')
        self.var=tk.IntVar()
        self.TCheckbutton1.configure(variable= self.var)

        self.Button1 = tk.Button(self.Frame1)
        self.Button1.place(relx=0.314, rely=0.8, height=31, width=91)
        self.Button1.configure(background="#72a5d8")
        self.Button1.configure(borderwidth="5")
        self.Button1.configure(text='''GO!!!''')
       
        self.Button1.configure(command = lambda : next(self))

if __name__ == '__main__':
    vp_start_gui()





